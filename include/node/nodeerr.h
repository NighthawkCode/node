#pragma once

// Constants for get_next_message()
constexpr float NODE_DEFAULT_MSG_WAIT_SEC = 2.0;  // Block for 2 sec
constexpr float NODE_NON_BLOCKING = 0.0;          // Don't block if empty

namespace node {

enum NodeError {
  SUCCESS = 0,
  GENERIC_ERROR = 1,
  TOPIC_NOT_FOUND = 2,
  OLD_PRODUCER_IS_STILL_ALIVE = 3,
  SOCKET_COULD_NOT_BE_CREATED = 4,
  SOCKET_SERVER_IP_INCORRECT = 5,
  SOCKET_SERVER_NOT_FOUND = 6,
  SOCKET_FCNTL_ERROR = 7,
  IDL_ENCODE_ERROR = 8,
  SOCKET_WRITE_ERROR = 9,
  SOCKET_REPLY_ERROR = 10,
  IDL_DECODE_ERROR = 11,
  INDEX_OUT_OF_BOUNDS = 12,
  SERVER_INCOMPATIBLE = 13,
  SHARED_MEMORY_OPEN_ERROR = 14,
  NOTIFY_FILE_OPEN_ERROR = 15,
  CONSUMER_LIMIT_EXCEEDED = 16,
  PRODUCER_NOT_PRESENT = 17,
  CONSUMER_TIME_OUT = 18,
  CBUF_MSG_NOT_SUPPORTED = 19,
  HASH_MISMATCH = 20,
  PUBLISHER_SOCKET_COULD_NOT_BE_CREATED = 21,
  PUBLISHER_SOCKET_FCNTL_ERROR = 22,
  PUBLISHER_SOCKET_BIND_ERROR = 23,
  PUBLISHER_SOCKET_LISTEN_ERROR = 24,
  SUBSCRIBER_SOCKET_ERROR = 25,
  SUBSCRIBER_SOCKET_FCNTL_ERROR = 26,
  NO_MESSAGE_AVAILABLE = 27,
  TOPIC_TYPE_MISMATCH = 28,
  RESPONSE_CALLBACK_NOT_PROVIDED = 29,
  RESPONSE_CALLBACK_FAILURE = 30,
  SOCKET_READ_ERROR = 31,
  PRODUCER_CBUF_SIZE_MISMATCH = 32,
  ASYNC_REQUEST_NOT_SUPPORTED = 33,
  INVALID_PARAMETERS = 34,
  KEY_NOT_FOUND = 35,
  KEY_UNAUTHORIZED = 36,
  TOPIC_COULD_NOT_BE_MADE_VISIBLE = 37,
};

}

constexpr const char* VCAT_NODE = "NODE";
